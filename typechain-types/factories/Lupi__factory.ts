/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lupi, LupiInterface } from "../Lupi";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_gameVersion",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "guessHash",
        type: "bytes32",
      },
    ],
    name: "commitGuess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCommittedGuessHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGuessCounter",
    outputs: [
      {
        internalType: "uint32",
        name: "counter",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLowestGuess",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRevealedGuess",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "guessData",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "getSaltedHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWinner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "newGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "answer",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "revealGuess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ac038038062001ac0833981810160405281019062000037919062000294565b620000836040518060400160405280601c81526020017f4465706c6f79696e67204c7570692047616d652056657273696f6e3a0000000081525082620000a360201b62000bfe1760201c565b80600490805190602001906200009b92919062000172565b5050620004e1565b620001458282604051602401620000bc9291906200031a565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200014960201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b828054620001809062000406565b90600052602060002090601f016020900481019282620001a45760008555620001f0565b82601f10620001bf57805160ff1916838001178555620001f0565b82800160010185558215620001f0579182015b82811115620001ef578251825591602001919060010190620001d2565b5b509050620001ff919062000203565b5090565b5b808211156200021e57600081600090555060010162000204565b5090565b60006200023962000233846200037e565b62000355565b9050828152602081018484840111156200025257600080fd5b6200025f848285620003d0565b509392505050565b600082601f8301126200027957600080fd5b81516200028b84826020860162000222565b91505092915050565b600060208284031215620002a757600080fd5b600082015167ffffffffffffffff811115620002c257600080fd5b620002d08482850162000267565b91505092915050565b6000620002e682620003b4565b620002f28185620003bf565b935062000304818560208601620003d0565b6200030f81620004d0565b840191505092915050565b60006040820190508181036000830152620003368185620002d9565b905081810360208301526200034c8184620002d9565b90509392505050565b60006200036162000374565b90506200036f82826200043c565b919050565b6000604051905090565b600067ffffffffffffffff8211156200039c576200039b620004a1565b5b620003a782620004d0565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003f0578082015181840152602081019050620003d3565b8381111562000400576000848401525b50505050565b600060028204905060018216806200041f57607f821691505b6020821081141562000436576200043562000472565b5b50919050565b6200044782620004d0565b810181811067ffffffffffffffff82111715620004695762000468620004a1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b6115cf80620004f16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637d03f5f3116100665780637d03f5f3146101215780638e7ea5b21461012b578063da421b5214610149578063de8b482a14610167578063fe28161c146101855761009e565b80633fac6193146100a35780635552f7c7146100c1578063608a5d95146100df5780636cbc2ded146100fb5780636ea97f6414610105575b600080fd5b6100ab6101b5565b6040516100b891906110c9565b60405180910390f35b6100c96101fe565b6040516100d691906110a7565b60405180910390f35b6100f960048036038101906100f49190610db6565b610342565b005b610103610493565b005b61011f600480360381019061011a9190610ddf565b61080b565b005b610129610b2f565b005b610133610b7b565b604051610140919061108c565b60405180910390f35b610151610ba5565b60405161015e91906111fb565b60405180910390f35b61016f610baf565b60405161017c9190611216565b60405180910390f35b61019f600480360381019061019a9190610ddf565b610bc9565b6040516101ac91906110c9565b60405180910390f35b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905090565b606061020e600180549050610c9a565b600060018054905067ffffffffffffffff811115610255577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156102835781602001602082028036833780820191505090505b50905060005b60018054905081101561033a57600181815481106102d0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016000015482828151811061031b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181525050808061033290611343565b915050610289565b508091505090565b63620f1f474210610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f9061113b565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160086101000a81548160ff02191690831515021790555050565b63621070c742116104d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d09061111b565b60405180910390fd5b600061270f90506000806000905060005b6001805490508110156107b6578360018281548110610532577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016000015410156107985760018181548110610584577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201600001549350600181815481106105d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925060005b600180549050811015610796578460018281548110610651577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160000154108061075c575084600182815481106106a5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016000015414801561075b57508373ffffffffffffffffffffffffffffffffffffffff1660018281548110610710577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020906002020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b5b1561076657610796565b600180805490506107779190611286565b81141561078357600192505b808061078e90611343565b915050610609565b505b81156107a3576107b6565b80806107ae90611343565b9150506104ea565b508015610806578260038190555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505050565b63620f1f474211610851576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610848906111db565b60405180910390fd5b63621070c74210610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088e9061117b565b60405180910390fd5b60008263ffffffff16116108e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d79061119b565b60405180910390fd5b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160089054906101000a900460ff16151514610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c906111bb565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160086101000a81548160ff0219169083151502179055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610a1b8383610bc9565b14610a5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a529061115b565b60405180910390fd5b610a63610d5c565b8263ffffffff1681600001818152505033816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018190806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b60006003819055506000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600354905090565b6000600260009054906101000a900463ffffffff16905090565b6000308383604051602001610be09392919061104f565b60405160208183030381529060405280519060200120905092915050565b610c968282604051602401610c149291906110e4565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d33565b5050565b610d3081604051602401610cae91906111fb565b6040516020818303038152906040527ff5b1bba9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d33565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600081359050610d9b8161156b565b92915050565b600081359050610db081611582565b92915050565b600060208284031215610dc857600080fd5b6000610dd684828501610d8c565b91505092915050565b60008060408385031215610df257600080fd5b6000610e0085828601610da1565b9250506020610e1185828601610d8c565b9150509250929050565b6000610e27838361100b565b60208301905092915050565b610e3c816112ba565b82525050565b610e53610e4e826112ba565b61138c565b82525050565b6000610e6482611241565b610e6e8185611264565b9350610e7983611231565b8060005b83811015610eaa578151610e918882610e1b565b9750610e9c83611257565b925050600181019050610e7d565b5085935050505092915050565b610ec0816112cc565b82525050565b610ed7610ed2826112cc565b61139e565b82525050565b6000610ee88261124c565b610ef28185611275565b9350610f02818560208601611310565b610f0b816113fb565b840191505092915050565b6000610f23601583611275565b9150610f2e82611426565b602082019050919050565b6000610f46601983611275565b9150610f518261144f565b602082019050919050565b6000610f69602383611275565b9150610f7482611478565b604082019050919050565b6000610f8c601a83611275565b9150610f97826114c7565b602082019050919050565b6000610faf601783611275565b9150610fba826114f0565b602082019050919050565b6000610fd2601083611275565b9150610fdd82611519565b602082019050919050565b6000610ff5601483611275565b915061100082611542565b602082019050919050565b611014816112f6565b82525050565b611023816112f6565b82525050565b61103281611300565b82525050565b61104961104482611300565b6113ba565b82525050565b600061105b8286610e42565b60148201915061106b8285611038565b60048201915061107b8284610ec6565b602082019150819050949350505050565b60006020820190506110a16000830184610e33565b92915050565b600060208201905081810360008301526110c18184610e59565b905092915050565b60006020820190506110de6000830184610eb7565b92915050565b600060408201905081810360008301526110fe8185610edd565b905081810360208301526111128184610edd565b90509392505050565b6000602082019050818103600083015261113481610f16565b9050919050565b6000602082019050818103600083015261115481610f39565b9050919050565b6000602082019050818103600083015261117481610f5c565b9050919050565b6000602082019050818103600083015261119481610f7f565b9050919050565b600060208201905081810360008301526111b481610fa2565b9050919050565b600060208201905081810360008301526111d481610fc5565b9050919050565b600060208201905081810360008301526111f481610fe8565b9050919050565b6000602082019050611210600083018461101a565b92915050565b600060208201905061122b6000830184611029565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000611291826112f6565b915061129c836112f6565b9250828210156112af576112ae6113cc565b5b828203905092915050565b60006112c5826112d6565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b60005b8381101561132e578082015181840152602081019050611313565b8381111561133d576000848401525b50505050565b600061134e826112f6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611381576113806113cc565b5b600182019050919050565b6000611397826113a8565b9050919050565b6000819050919050565b60006113b382611419565b9050919050565b60006113c58261140c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b60008160e01b9050919050565b60008160601b9050919050565b7f5374696c6c20696e2072657665616c2070686173650000000000000000000000600082015250565b7f477565737320646561646c696e65206861732070617373656400000000000000600082015250565b7f52657665616c6564206861736820646f6573206e6f74206d6174636820636f6d60008201527f6d69740000000000000000000000000000000000000000000000000000000000602082015250565b7f52657665616c20646561646c696e652068617320706173736564000000000000600082015250565b7f416e73776572206d75737420626520706f736974697665000000000000000000600082015250565b7f416c72656164792072657665616c656400000000000000000000000000000000600082015250565b7f5374696c6c20696e206775657373207068617365000000000000000000000000600082015250565b611574816112cc565b811461157f57600080fd5b50565b61158b81611300565b811461159657600080fd5b5056fea2646970667358221220a7b8ff79015303778f63c521114b9118ccdc5659418cde07b4ea73738bd192d364736f6c63430008040033";

type LupiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LupiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lupi__factory extends ContractFactory {
  constructor(...args: LupiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lupi";
  }

  deploy(
    _gameVersion: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lupi> {
    return super.deploy(_gameVersion, overrides || {}) as Promise<Lupi>;
  }
  getDeployTransaction(
    _gameVersion: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gameVersion, overrides || {});
  }
  attach(address: string): Lupi {
    return super.attach(address) as Lupi;
  }
  connect(signer: Signer): Lupi__factory {
    return super.connect(signer) as Lupi__factory;
  }
  static readonly contractName: "Lupi";
  public readonly contractName: "Lupi";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LupiInterface {
    return new utils.Interface(_abi) as LupiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Lupi {
    return new Contract(address, _abi, signerOrProvider) as Lupi;
  }
}
